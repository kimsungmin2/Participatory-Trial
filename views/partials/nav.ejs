<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link
  rel="stylesheet"
  href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
/>
<!-- Bootstrap JS, Popper.js, and jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="/css/main-style.css" />
</head>
<body>
  <nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">CPT</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
        </ul>
        <ul class="navbar-nav mx-auto">
          <!-- 중앙에 배치하기 위해 mx-auto 사용 -->
          <li class="nav-item">
            <a class="nav-link" href="/online-boards">자유게시판</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/trials">재판</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/humors">유머</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/poltical-debates">정치 토론</a>
          </li>
           <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              명예의 전당
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
              <a class="dropdown-item" href="/trials/HallofFame/votes">재판 명예의 전당 (투표수)</a>
              <a class="dropdown-item" href="/trials/HallofFame/likes">재판 명예의 전당 (좋아요)</a>
              <a class="dropdown-item" href="/trials/HallofFame/views">재판 명예의 전당 (조회수)</a>
              <a class="dropdown-item" href="/humors/HallofFame/votes">유머게시판 명예의 전당 (투표수)</a>
              <a class="dropdown-item" href="/humors/HallofFame/likes">유머게시판 명예의 전당 (좋아요)</a>
              <a class="dropdown-item" href="/humors/HallofFame/views">유머게시판 명예의 전당 (조회수)</a>
              <a class="dropdown-item" href="/poltical-debates/HallofFame/votes">정치 명에의 전당(투표수)</a>
              <a class="dropdown-item" href="/poltical-debates/HallofFame/views">정치 명에의 전당(조회수)</a>
              <a class="dropdown-item" href="/online-boards/HallofFame/likes">게시판 명예의 전당(좋아요)</a>
              <a class="dropdown-item" href="/online-boards/HallofFame/views">게시판 명예의 전당(투표수)</a>
            </div>
          </li>
        </ul>
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <% if (isLoggedIn) { %>
              <a class="nav-link" id="logout" href="/logout">로그아웃</a>
            <% } else { %>
              <a class="nav-link" href="/sign-in">로그인</a>
            <% } %>
          </li>
        </ul>
        </ul>
      </div>
    </div>
  </nav>
  <!-- <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script> -->
  <script>
    document.getElementById('logout').addEventListener('click', function() {
      fetch('/logout', { method: 'POST' }) // /logout에 POST 요청
        .then(response => {
          if (response.ok) {
            alert('로그아웃 성공')
            window.location.href = 'http://localhost:3000'; // 응답 성공 시 리다이렉트
          } else {
            alert('Logout failed.');
          }
        })
        .catch(error => console.error('Error:', error));
    });
        document.addEventListener('DOMContentLoaded', function () {
          const showNotificationsBtn = document.getElementById('showNotifications');
    const popupContainer = document.createElement('div');
    document.body.appendChild(popupContainer);
    popupContainer.id = 'popupContainer';
    popupContainer.className = 'popup';
        let offset = 0;
        function loadNotifications() {
          const notificationsString = localStorage.getItem('notifications');
          return notificationsString ? JSON.parse(notificationsString) : [];
        }

        let notifications =
          JSON.parse(localStorage.getItem('notifications')) || [];

        function saveNotifications(notifications) {
          localStorage.setItem('notifications', JSON.stringify(notifications));
        }

        // const socket = io();

    
        popupContainer.addEventListener('click', function (event) {
          if (
            event.target.tagName === 'A' &&
            event.target.classList.contains('notification-link')
          ) {
            event.preventDefault();
            const notificationUrl = event.target.getAttribute('href');
            window.location.href = notificationUrl;
            event.target.remove();
          }
        });
        showNotificationsBtn.addEventListener('click', function () {
        const rect = this.getBoundingClientRect(); // 버튼의 위치 정보를 가져옴
        const top = rect.bottom + window.scrollY; // 버튼의 하단 위치에 맞춤
        const left = rect.left + window.scrollX; // 버튼의 왼쪽 정렬

        popupContainer.style.top = `${top}px`; // 상단 위치 설정
        popupContainer.style.left = `${left}px`; // 왼쪽 위치 설정
        popupContainer.style.display = 'block'; // 알림 컨테이너 표시

        const notifications = loadNotifications();
        popupContainer.innerHTML = '';

        notifications.forEach((notification) => {
            const notificationElement = document.createElement('a');
            notificationElement.href = '#';
            notificationElement.textContent = notification;
            notificationElement.className = 'notification'; // CSS 클래스 적용
            notificationElement.onclick = function (event) {
                event.preventDefault();
                const messageParts = notification.split('의');
                const channelType = messageParts[0].trim();
                const roomIdMatch = messageParts[1].match(/\d+/);
                const roomId = roomIdMatch ? roomIdMatch[0] : '';
                const notificationUrl = `http://localhost:3000/${channelType}/${roomId}`;
                removeNotificationFromLocalStorage(notification);
                this.parentNode.removeChild(this);
                window.location.href = notificationUrl;
            };
            popupContainer.appendChild(notificationElement);
            popupContainer.appendChild(document.createElement('br'));
        });
        setTimeout(() => {
            popupContainer.style.display = 'none';
        }, 5000);
    });
        function removeNotificationFromLocalStorage(notificationToRemove) {
          const notifications = loadNotifications();
          const filteredNotifications = notifications.filter(
            (notification) => notification !== notificationToRemove,
          );
          saveNotifications(filteredNotifications);
        }
        function createNotification(message) {
          const notification = document.createElement('div');
          notification.classList.add('notification', 'show');
          notification.textContent = message;
          notification.addEventListener('click', function () {
            const messageParts = message.split('의');
            const channelType = messageParts[0];
            const roomIdMatch = messageParts[1].match(/\d+/);
            const roomId = roomIdMatch ? roomIdMatch[0] : '';
            window.location.href = `http://localhost:3000/${channelType}/${roomId}`;
          });
          notification.style.bottom = `${20 + offset}px`;
          notificationContainer.appendChild(notification);

          offset += 60;

          setTimeout(() => {
            notificationContainer.removeChild(notification);
            offset -= 60;
          }, 5000);
          while (notificationContainer.children.length > 5) {
            const oldNotification = notificationContainer.children[0];
            notificationContainer.removeChild(oldNotification);
            offset -= 60;
          }
        }
      });
</script>
<script>
  $(document).ready(function(){
  $('.dropdown-toggle').dropdown();
});

</script>
</body>
</html>