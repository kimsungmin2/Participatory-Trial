<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>post</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script>
    <link rel="stylesheet" href="/css/vote.css" />
    <link rel="stylesheet" href="/css/board-style.css" />
  </head>
  <body>
    <header>
      <%- include('partials/nav') %>
    </header>
    <main>
      <!-- <%- include('partials/board-title') %>
      <hr width="70%" color="lightskyblue" size="2" style="margin-left: 30px; height: 3px;" /> -->
      <div class="post_title">
        <% if (boardType !== "trial") {%>
        <span id="title"><%= data.title  %></span>
        <% } else { %>
          <span><%= data.OneTrials.title  %></span>
          <% } %>
        <div id="view-like-count">
          <% if (boardType !== "trial") {%>
          <span>조회수:<%= data.view  %></span>
          <% if (boardType !== 'polticalDebate') { %>
            <span id="likeCount">좋아요:<%= data.like %></span>
          <% } %>
          <% } else { %>
            <span>조회수:<%= data.OneTrials.view  %></span>
              <span id="likeCount">좋아요:<%= data.OneTrials.like %></span>
          <% } %>
        </div> 
      </div>
      <div class="ud-container"> 
        <div class="update-delete">
          <% if (boardType !== "trial") {%>
          <button id="update" data-post-id="<%= data.id %>">수정</button>
          <button id="delete" data-post-id="<%= data.id %>">삭제</button>
          <% } else { %>
            <button id="update" data-post-id="<%= data.OneTrials.id %>">수정</button>
            <button id="delete" data-post-id="<%= data.OneTrials.id %>">삭제</button>
            <% } %>
        </div> 
      </div>
      <hr width="100%" color="grey" size="1"/>
      
      <!--게시글 내용-->
      <div class="post_content">
        <% if (boardType !== "trial") {%>
          <span><%= data.content  %></span>
          <% } else { %>
            <span><%= data.OneTrials.content  %></span>
            <% } %>
        <% if (data.imageUrl) { %>
          <div class="post_image">
            <% for (let i = 0; i < JSON.parse(data.imageUrl).length; i++) {  %>
            <img src="<%=JSON.parse(data.imageUrl)[i] %>" alt="Post Image" >
            <% } %>   
          </div>   
          <% } %>
      </div>
      <% if (boardType === 'humor') { %>
        <%- include('humorVote') %>
      <% } else if (boardType === 'polticalDebate') { %>
        <%- include('polticalVote') %>
      <% } else if (boardType === 'trial') { %>
      <%- include('chat') %> 
        <% } %>
      </div>
      <!--게시글 좋아요-->
      <% if (boardType !== 'polticalDebate') { %>
        <% if (boardType !== 'trial') { %>
        <div class="like_button">
          <button id="like" class="like" href="/<% data.id %>">좋아요</button>
        </div>
        <% } else if (boardType === "trial") { %>
          <div class="like_button">
          <button id="like" class="like">좋아요</button>
          <!-- 판례 조회 BUTTON -->
          <button id="judicial-precedent">판례 조회</button>
        </div>
      <% } %>
      <% } %>
      <!--게시글 댓글-->
      <% 
      let boardComment;
      switch (boardType) {
            case 'humor':
            boardComment = 'humorComment';
              break;
            case 'onlineBoard':
            boardComment = 'onlineBoardComment';
              break;
            case 'polticalDebate':
            boardComment = 'polticalDebateComments';
              break;
          }
      %>
              <% if (boardType === 'humor') { %>
                <%= JSON.stringify(data.hummorComment) %>
                <p style="font-size: 30px;">댓글: <%= data.humorComment.length  %>개</p>
                <div class="content_container">
                  <% for (let i = 0; i < data.humorComment.length; i++)  {%>
                    <div class="content">
                    <p>작성자: <%= data.humorComment[i].userId %></p>
                    <p><%= data.humorComment[i].content %></p>
                    <p>작성일: <%= data.humorComment[i].createdAt %></p>
                    <button class="modify" data-comment-id="<%= data.humorComment[i].id %>">수정</button>
                    <button class="delete" data-comment-id="<%= data.humorComment[i].id %>">삭제</button>
                    </div>
                    <% } %>
                  </div>
              <% } else if (boardType === 'onlineBoard') { %>
                <p style="font-size: 30px;">댓글: <%= data.onlineBoardComment.length  %>개</p>
                <div class="content_container">
                  <% for (let i = 0; i < data.onlineBoardComment.length; i++)  {%>
                    <div class="content">
                    <p>작성자: <%= data.onlineBoardComment[i].userId %></p>
                    <p><%= data.onlineBoardComment[i].content %></p>
                    <p>작성일: <%= data.onlineBoardComment[i].createdAt %></p>
                    <button class="modify" data-comment-id="<%= data.onlineBoardComment[i].id %>">수정</button>
                    <button class="delete" data-comment-id="<%= data.onlineBoardComment[i].id %>">삭제</button>
                    
                    </div>
                    <% } %>
                </div>
              <% } else if (boardType === 'polticalDebate') { %>
                <p style="font-size: 30px;">댓글: <%= data.polticalDebateComments.length  %>개</p>
                <div class="content_container">
                  <% for (let i = 0; i < data.polticalDebateComments.length; i++)  {%>
                    <div class="content">
                    <p>작성자: <%= data.polticalDebateComments[i].userId %></p>
                    <p><%= data.polticalDebateComments[i].content %></p>
                    <p>작성일: <%= data.polticalDebateComments[i].createdAt %></p>
                    <button class="modify" data-comment-id="<%= data.polticalDebateComments[i].id %>">수정</button>
                    <button class="delete" data-comment-id="<%= data.polticalDebateComments[i].id %>">삭제</button>
                    </div>
                    <% } %>
                </div>
              <% } %>
      <% if(boardType !== "trial") {%>
      <div class="comment-form">
        <form id="commentForm">
          <div class="form-group">
            <label for="commentContent">댓글 내용</label>
            <textarea class="form-control" id="commentContent" rows="3"></textarea>
          </div>
          <button type="submit" class="btn btn-primary">작성</button>
        </form>
      </div>
      <% } %>
    
    </main>
    <script>


    let boardName;
    switch ("<%= boardType %>") {
          case 'humor':
          boardName = 'humors';
            break;
          case 'onlineBoard':
          boardName = 'online-boards';
            break;
          case 'polticalDebate':
          boardName = 'poltical-debates';
            break;
          case 'trial':
          boardName = 'trials';
            break;
        }
document.getElementById("update").addEventListener("click", function(e) {
  e.preventDefault();
  const postId = this.getAttribute("data-post-id");

  fetch(`/${boardName}/update/${postId}`)
        .then(response => {
          if(response.ok) {
            window.location.href = `/${boardName}/update/${postId}`
          } else if (response.status === 401) {
            return response.json()
          }
        })
        .then(data => {
          if (data && data.message) {
            alert('로그인해야 합니다!')
          }
        })
});

document.getElementById("update").addEventListener("click", function(e) {
  e.preventDefault();
  const postId = this.getAttribute("data-post-id");

  fetch(`/${boardName}/update/${postId}`)
        .then(response => {
          if(response.ok) {
            window.location.href = `/${boardName}/update/${postId}`
          } else if (response.status === 401) {
          alert('로그인 후 사용해주세요.')
        } else if (response.status === 403) {
          alert('다른 사용자의 게시물은 수정할 수 없습니다.')
        }
        else if (response.status === 404) {
          alert('다른 사용자의 게시물은 수정할 수 없습니다.')
        }
        })
        .then(data => {
          if (data && data.message) {
            alert('로그인해야 합니다!')
          }
        })
});


  const deleteButton = document.getElementById('delete'); 
  
  
  deleteButton.addEventListener('click', function(event) {
    const postId = deleteButton.getAttribute('data-post-id'); 
    if (!postId) {
      alert('게시물 ID가 없습니다.');
      return;
    }

    // 사용자에게 삭제 확인 요청
    if (confirm('정말로 이 게시물을 삭제하시겠습니까?')) {
      fetch(`/${boardName}/${postId}`, {
        method: 'DELETE'
      })
      .then(response => {
        if (response.ok) {
          alert('게시물이 삭제되었습니다.');
          window.location.href = `/${boardName}`; 
        } else if (response.status === 401) {
          alert('로그인 후 사용해주세요.')
        } else if (response.status === 403) {
          alert('다른 사용자의 게시물은 삭제할 수 없습니다.')
        } else if (response.status === 404) {
          alert('다른 사용자의 게시물은 삭제할 수 없습니다.')
        }
      })
      .catch(error => {
        console.error('Error:', error.message);
        alert('게시물 삭제에 실패했습니다.');
      });
    }
  });
        document.querySelectorAll('.modify').forEach(button => {
      button.addEventListener('click', function() {
        
        let contentContainer = this.parentElement;
        let commentContentElement = contentContainer.querySelector('p:nth-child(2)');
      
        commentContentElement.contentEditable = true;
        commentContentElement.focus();
        commentContentElement.style.border = "1px solid #ccc";
        
        this.innerText = "등록";

        this.removeEventListener('click', arguments.callee);
        this.addEventListener('click', function() {
          let newCommentContent = commentContentElement.innerText;
          let currentUrl = window.location.href
          let commentId = this.getAttribute('data-comment-id');
          const postId = "<%= data.id%>"
          fetch(`${currentUrl}/comments/${commentId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              content: newCommentContent
            })
          })
          .then(response => {
            if (response.ok) {
              location.reload();
            } else if(response.status === 403 || response.status === 401 ) {
              response.json().then(data => {
                alert(data.message)
              })
            }
            else {
              console.error('댓글 수정 실패');
            }
          })
          .catch(error => {
          alert('서버 에러', error);
          });
        });
      });
    });

    // 삭제
    document.querySelectorAll('.delete').forEach(button => {
  button.addEventListener('click', function() {
    let contentContainer = this.parentElement;
    let commentId = this.getAttribute('data-comment-id');
    let currentUrl = window.location.href;

    fetch(`${currentUrl}/comments/${commentId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (response.ok) {
        contentContainer.remove();
        location.reload();
      }else if(response.status !== 200) {
        response.json().then(data => {
                alert(data.message)
              })
      } else {
        console.error('댓글 삭제 실패');
      }
    })
    .catch(error => {
      alert('서버 에러', error);
    });
  });
});
  
// 등록
if (boardName !== "trials") {
  document.getElementById('commentForm').addEventListener('submit', function(event) {
  event.preventDefault();

  let commentContent = document.getElementById('commentContent').value;
  let currentUrl = window.location.href;

  fetch(`${currentUrl}/comments`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      content: commentContent
    })
  })
  .then(response => {
    if (response.ok) {
      location.reload();
    } else {
      alert('댓글 작성 실패');
    }
  })
  .catch(error => {
    alert('서버 에러', error);
  });
});
}

document.addEventListener('DOMContentLoaded', function () {
        const socket = io('/');
        const path = window.location.pathname;
        const segments = path.split('/');
        const extractedChannelType = segments[1];
        const roomId = segments[2];
        const likeBtn = document.getElementById('like');
        const ChannelType = {
            trials: 'trials',
            humors: 'humors',
            polticals: 'poltical-debates',
	onlineboards:'online-boards',
        };
        let channelType;
        if (Object.values(ChannelType).includes(extractedChannelType)) {
          channelType = extractedChannelType;
        } else {
        }
likeBtn.addEventListener('click', function() {
          socket.emit('like', {
            channelType,
            roomId,
          });
          likeBtn.disabled = true;
          setTimeout(function() {
            likeBtn.disabled = false;
          }, 3000);
        });
        socket.on('likesUpdated', function(data) {
          if (data.id == roomId) {
            const likeCountElement = document.querySelector('#likeCount');
            const previousLikes = parseInt(likeCountElement.textContent.split(':')[1]);
            likeCountElement.textContent = `좋아요:${data.likes}`;
            if (data.likes < previousLikes) {
              alert('좋아요를 취소하였습니다.');
            }
          }
        });
      })

    </script>
  </body>
</html>

